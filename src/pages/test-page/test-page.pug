extends ../base/base

include ../../components/color-sample/color-sample
include ../../components/text-sample/text-sample
include ../../components/text-field/text-field
include ../../components/button/button
include ../../components/bullet-list/bullet-list
include ../../components/checkbox/checkbox
include ../../components/advantage/advantage
include ../../components/like-button/like-button
include ../../components/comment/comment
include ../../components/logo/logo
include ../../components/radio-button/radio-button
include ../../components/rate-button/rate-button
include ../../components/toggle-button/toggle-button
include ../../components/range-slider/range-slider

//-
  options.title - заголовок теста
  options.mix - название миксина
  options.dataList - массив объектов инициализации миксина
  options.theme - тема отображения контента
mixin test-page__test(options)
  if !options
    - options = {};
  
  -
    const {
      title = '',
      mix,
      dataList,
      theme,
    } = options;
    
    const listTheme = (theme) ? `test-page__test__list_theme-${theme}` : null;
  
  .test-page__test
    h2.test-page__test__title= title
    .test-page__test__list(class = listTheme)
      each data in dataList
        .test-page__test__item
          +#{mix}(data)
    hr.test-page__test__underline

block variables
  -
    const title = 'Тестовая страница';
    const data = htmlWebpackPlugin.options.getData();
    const { tests } = data;

    // связывание ссылок на данные с тестами
    tests.forEach((test) => {
      test.dataList = data[test.dataList];
    });

    // получение ссылок на изображения в собранном проекте
    data.comments.forEach((comment) => {
      comment.image = require(`./img/${comment.image}`);
    });

block main
  .test-page
    each test in tests
      +test-page__test(test)