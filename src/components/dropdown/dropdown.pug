include ../button/button

mixin dropdown(options = {})
  -
    const { 
      title = '',
      placeholder = '',
      rows = [], 
      maxLen = 100,
      type = 'counter',
      isExpanded = false,
      hasControls = false, 
      countables = [], 
      valueChanged, 
    } = options;

    const classes = [];
    if (isExpanded) classes.push('dropdown_open');

  .dropdown.js-dropdown(
    class = classes
    data-type = type
    data-value-changed = valueChanged
    data-max-len = maxLen
    data-has-controls = hasControls
    data-countables = (type === 'summator') ? countables : null
  )
    .dropdown__input
      .dropdown__title= title
      .dropdown__input-box.js-dropdown__input-box
        input.dropdown__text.js-dropdown__text(type = "text" placeholder = placeholder readonly = true)
        .dropdown__icon expand_more

    .dropdown__content.js-dropdown__content
      each row in rows
        .dropdown__row.js-dropdown__row(data-row-countables = row.countables)
          .dropdown__row-text= row.text
          .dropdown__row-buttons
            .dropdown__button-minus.js-dropdown__button-minus(class = (row.counter !== 0) ? 'dropdown__button-minus_active' : '') -
            .dropdown__counter.js-dropdown__counter= row.counter
            .dropdown__button-plus.js-dropdown__button-plus.dropdown__button-plus_active +

      if hasControls
        .dropdown__control-buttons
          .dropdown__clear-button.js-dropdown__clear-button
            +button({ text: 'очистить'})

          .dropdown__accept-button.js-dropdown__accept-button
            +button({ text: 'применить'})
